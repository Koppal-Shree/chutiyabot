import os
class Config(object):
    TEGE_TOKEN=os.environ.get("TEGE_TOKEN","")
    TEGE_API_ID=int(os.environ.get("TEGE_API_ID",12345))
    TEGE_API_HASH=os.environ.get("TEGE_API_HASH")
    TEGE_OWNER=int(os.environ.get("TEGE_OWNER",12345))
    ARIATWO_PORT=int(os.environ.get("ARIATWO_PORT",6088))
    AUTH_CHANNEL=set(int(x)for x in os.environ.get("AUTH_CHANNEL","").split())
    CANCEL_COMMAND_G=os.environ.get("CANCEL_COMMAND_G","cancel")
    CHUNK_SIZE=int(os.environ.get("CHUNK_SIZE",128))
    CLEAR_THUMBNAIL=os.environ.get("CLEAR_THUMBNAIL","clearthumbnail")
    CUSTOM_FILE_NAME=os.environ.get("CUSTOM_FILE_NAME","")
    DEF_THUMB_NAIL_VID_S=os.environ.get("DEF_THUMB_NAIL_VID_S","https://placehold.it/90x90")
    DESTINATION_FOLDER=os.environ.get("DESTINATION_FOLDER","robote")
    DOWNLOAD_LOCATION="./DOWNLOADS"
    EDIT_SLEEP_TIME_OUT=int(os.environ.get("EDIT_SLEEP_TIME_OUT",12))
    FINISHED_PROGRESS_STR=os.environ.get("FINISHED_PROGRESS_STR","█")
    FREE_USER_MAX_FILE_SIZE=50000000
    GET_SIZE_G=os.environ.get("GET_SIZE_G","getsize")
    GLEECH_COMMAND=os.environ.get("GLEECH_COMMAND","gleech")
    INDEX_LINK=os.environ.get("INDEX_LINK","")
    LEECH_COMMAND=os.environ.get("LEECH_COMMAND","leech")
    LOG_COMMAND=os.environ.get("LOG_COMMAND","log")
    MAX_FILE_SIZE=50000000
    MAX_MESSAGE_LENGTH=4096
    MAX_TG_SPLIT_FILE_SIZE=int(os.environ.get("MAX_TG_SPLIT_FILE_SIZE",1072864000))
    MAX_TIME_WAIT_TORRENTS_START=int(os.environ.get("MAX_TIME_WAIT_TORRENTS_START",600))
    PROCESS_MAX_TIMEOUT=3600
    PYTDL_COMMAND_G=os.environ.get("PYTDL_COMMAND_G","pytdl")
    UPLOADER_CONFIG=os.environ.get("UPLOADER_CONFIG","")
    SAVE_THUMBNAIL=os.environ.get("SAVE_THUMBNAIL","savethumbnail")
    STATUS_COMMAND=os.environ.get("STATUS_COMMAND","status")
    TELEGRAM_LEECH_COMMAND_G=os.environ.get("TELEGRAM_LEECH_COMMAND_G","tleech")
    TG_MAX_FILE_SIZE=2097152000
    TG_OFFENSIVE_API=os.environ.get("TG_OFFENSIVE_API",None)
    UN_FINISHED_PROGRESS_STR=os.environ.get("UN_FINISHED_PROGRESS_STR","░")
    UPLOAD_AS_DOC=os.environ.get("UPLOAD_AS_DOC","False")
    YTDL_COMMAND=os.environ.get("YTDL_COMMAND","ytdl")
